name: ByteMotion AB NodeJS CI - Build, Test, and Publish

on:
  workflow_call:
    secrets:
      GIT_USER_EMAIL:
        required: true
      GIT_USER_NAME:
        required: true
      NPM_TOKEN:
        required: true

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    - name: 'Checkout repository and submodules'
      uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
    - run: |
        npm install --ignore-scripts
        npm rebuild
        npm run build --if-present
        npm test
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  publish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14
          registry-url: https://registry.npmjs.org/

      - name: Set Major Release
        id: major_release
        if: ${{ github.event_name == 'release' && github.event.action == 'created' }}
        run: |
          echo "::set-output name=RELEASE::major"
          echo "::set-output name=TAG::latest"

      - name: Set Minor Release
        id: minor_release
        if: ${{ github.event_name == 'pull_request' && github.event.pull_request.merged == true }}
        run: |
          echo "::set-output name=RELEASE::minor"
          echo "::set-output name=TAG::latest"

      - name: Set PreRelease Release
        id: prerelease_release
        if: ${{ github.event_name == 'pull_request' && github.event.pull_request.merged == false }}
        run: |
          echo "::set-output name=RELEASE::prerelease --preid=rc"
          BRANCH=$(git rev-parse --abbrev-ref HEAD)
          echo "::set-output name=TAG::${BRANCH}"

      - name: Tag and Publish
        run: | 
          BRANCH=$(git rev-parse --abbrev-ref HEAD)
          RELEASE=${{ 
            steps.major_release.outputs.RELEASE ||
            steps.minor_release.outputs.RELEASE ||
            steps.prerelease_release.outputs.RELEASE ||
            'patch'
          }}
          git config --global user.email "${{ secrets.GIT_USER_EMAIL }}"
          git config --global user.name "${{ secrets.GIT_USER_NAME }}"
          npm install
          npm run build
          git checkout -- .
          npm version $RELEASE
          echo "Pushing $RELEASE to $BRANCH"
          git push origin $BRANCH
          git push origin $BRANCH --tags
          npm publish --tag ${{ steps.prerelease_release.outputs.TAG }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
